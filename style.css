/* basic box sizing */
*, *::after, *::before {
    box-sizing: border-box;
}

 /* To easily modify things and make sure its automatic
 We will use css variables */
 :root {
    --cell-size: 100px;
    /* Here we define the mark size, the x and o size in relation with the cell */
    --mark-size: calc(var(--cell-size) * 0.9)
 }

/* body styling, removing margins */
body{
    margin: 0;
}

.board{
    width: 100vw;
    height: 100vh;
    /* to center all elements we will use display grid */
    display:grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    /* here is were we define the grid */
    grid-template-columns: repeat(3, auto);
}

.cell {
    /* Here we use the width and height variable we asigned in the root */
    width: var(--cell-size);
    height: var(--cell-size);
    border: 1px solid black;
    /* We need to display the content of the cell */
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

 /* Now we have to remove the grid from our border */

 .cell:first-child,
 .cell:nth-child(2),
 .cell:nth-child(3) {
    border-top:none
 }

  /* Here we will select cell of n=child ( so 3 * cell no 0 + 1) */
 .cell:nth-child(3n + 1) {
    border-left: none;
 }

 .cell:nth-child(3n + 3) {
    border-right: none;
 }

 .cell:last-child,
 .cell:nth-child(8),
 .cell:nth-child(7) {
    border-bottom: none;
 }

 /* Here we will define the notallowed for the filled cells */
 .cell.x,
 .cell.circle {
   cursor: not-allowed;
 }
 /* The hover effect */
 .cell.x::before,
 .cell.x::after,
 .cell.circle::before {
   background-color: black;
 }


 .board.x .cell:not(.x):not(.circle):hover::before,
 .board.x .cell:not(.x):not(.circle):hover::after,
 .board.circle .cell:not(.x):not(.circle):hover::before {
   background-color: lightgrey;
 }

/* Here we will use the not selector */
 .cell.x::before,
 .cell.x::after,
 .board.x .cell:not(.x):not(.circle):hover::before,
 .board.x .cell:not(.x):not(.circle):hover::after
  {
    content: '';
    /* We need to position them absolute to have the same base */
    position:absolute;
    width: calc(var(--mark-size)* .15);
    height: var(--mark-size);
 }

 .cell.x::before,
 .board.x .cell:not(.x):not(.circle):hover::before {
   transform: rotate(45deg);
 }
 .cell.x::after,
 .board.x .cell:not(.x):not(.circle):hover::after {
   transform: rotate(-45deg);
 }

  /* The circle construction */
.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before, 
.board.circle .cell:not(.x):not(.circle):hover::after {
    content: '';
    /* We need to position them absolute to have the same base */
    position:absolute;
    border-radius: 50%;
 }

 .cell.cell.circle::before,
 .board.circle .cell:not(.x):not(.circle):hover::before {
   width: var(--mark-size);
   height: var(--mark-size);
 }

 .cell.circle::after,
 .board.circle .cell:not(.x):not(.circle):hover::after {
   width: calc(var(--mark-size) * 0.7);
   height: calc(var(--mark-size) * 0.7);
   background-color: white;
 }

 /* Here we will build the hover effect */

/* styling the button */
.winning-message {
   display: none;
   position: fixed;
   top: 0;
   left: 0;
   right: 0;
   bottom: 0;
   background-color: rgba(0,0,0, 0.9);
   justify-content: center;
   align-items: center;
   color: white;
   font-size: 5rem;
   flex-direction: column;
}

.winning-message button {
   font-size: 3rem;
   border: 1px solid black;
   cursor: pointer;
}

.winning-message button:hover {
   background-color: black;
   color: white;
   border-color: white;
}

.winning-message.show {
   display:flex;
}